diff --git a/node_modules/minio/dist/main/minio.d.ts b/node_modules/minio/dist/main/minio.d.ts
index 7fb0a64..3e7fbde 100644
--- a/node_modules/minio/dist/main/minio.d.ts
+++ b/node_modules/minio/dist/main/minio.d.ts
@@ -77,7 +77,7 @@ export class Client extends TypedClient {
   }, requestDate: Date, callback: ResultCallback<string>): void;
   presignedUrl(httpMethod: string, bucketName: string, objectName: string, expiry?: number, reqParams?: {
     [key: string]: any;
-  }, requestDate?: Date): Promise<string>;
+  }, requestDate?: Date, signedHost?: string, callback?: ResultCallback<string>): Promise<string>;
   presignedGetObject(bucketName: string, objectName: string, callback: ResultCallback<string>): void;
   presignedGetObject(bucketName: string, objectName: string, expiry: number, callback: ResultCallback<string>): void;
   presignedGetObject(bucketName: string, objectName: string, expiry: number, respHeaders: {
@@ -86,6 +86,9 @@ export class Client extends TypedClient {
   presignedGetObject(bucketName: string, objectName: string, expiry: number, respHeaders: {
     [key: string]: any;
   }, requestDate: Date, callback: ResultCallback<string>): void;
+  presignedGetObject(bucketName: string, objectName: string, expiry: number, respHeaders: {
+    [key: string]: any;
+  }, requestDate: Date, callback: ResultCallback<string>): void;
   presignedGetObject(bucketName: string, objectName: string, expiry?: number, respHeaders?: {
     [key: string]: any;
   }, requestDate?: Date): Promise<string>;
diff --git a/node_modules/minio/dist/main/minio.js b/node_modules/minio/dist/main/minio.js
index 9a65306..0ae0f53 100644
--- a/node_modules/minio/dist/main/minio.js
+++ b/node_modules/minio/dist/main/minio.js
@@ -638,10 +638,13 @@ class Client extends _client.TypedClient {
   // * `expiry` _number_: expiry in seconds (optional, default 7 days)
   // * `reqParams` _object_: request parameters (optional) e.g {versionId:"10fa9946-3f64-4137-a58f-888065c0732e"}
   // * `requestDate` _Date_: A date object, the url will be issued at (optional)
-  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, cb) {
+  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, signedHost, cb) {
     if (this.anonymous) {
       throw new errors.AnonymousRequestError('Presigned ' + method + ' url cannot be generated for anonymous requests');
     }
+    if ((0, _helper.isFunction)(signedHost)) {
+      cb = signedHost;
+    }
     if ((0, _helper.isFunction)(requestDate)) {
       cb = requestDate;
       requestDate = new Date();
@@ -677,12 +680,17 @@ class Client extends _client.TypedClient {
       // This statement is added to ensure that we send error through
       // callback on presign failure.
       var url;
+      var headers = {}
+      if(signedHost) {
+        headers.host = signedHost
+      }
       var reqOptions = this.getRequestOptions({
         method,
         region,
         bucketName,
         objectName,
-        query
+        query,
+        headers
       });
       this.checkAndRefreshCreds();
       try {
